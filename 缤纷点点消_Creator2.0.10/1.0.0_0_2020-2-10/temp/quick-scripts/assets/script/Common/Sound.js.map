{"version":3,"sources":["Sound.js"],"names":["cc","Class","extends","Component","properties","sound","default","type","AudioClip","onLoadPlay","loop","start","volume","window","G","current","audioEngine","play","onDestroy","stop"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAC,eAAO;AACHC,qBAAS,IADN;AAEHC,kBAAMP,GAAGQ;AAFN,SAlBC;AAsBRC,oBAAY,KAtBJ;AAuBRC,cAAM;;AAvBE,KAHP;;AA8BL;;AAEA;;AAEAC,SAlCK,mBAkCG;;AAEJ,YAAIC,SAAS,CAAb;;AAEA,YAAIC,OAAOC,CAAP,IAAYA,EAAEF,MAAF,IAAY,IAA5B,EAAkC;AAC9BA,qBAASE,EAAEF,MAAX;AACH;;AAED,YAAI,KAAKH,UAAT,EAAqB;AACjB,iBAAKM,OAAL,GAAef,GAAGgB,WAAH,CAAeC,IAAf,CAAoB,KAAKZ,KAAzB,EAAgC,KAAKK,IAArC,EAA2CE,MAA3C,CAAf;AACH;AAEJ,KA9CI;;;AAgDL;;AAEAM,aAlDK,uBAkDO;AACR,YAAI,KAAKH,OAAL,IAAgB,IAApB,EAA0B;AACtBf,eAAGgB,WAAH,CAAeG,IAAf,CAAoB,KAAKJ,OAAzB;AACH;AACJ;AAtDI,CAAT","file":"Sound.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\Common","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n\r\n\r\n        sound: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n        onLoadPlay: false,\r\n        loop: false,\r\n\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start() {\r\n\r\n        let volume = 1;\r\n\r\n        if (window.G && G.volume != null) {\r\n            volume = G.volume;\r\n        }\r\n\r\n        if (this.onLoadPlay) {\r\n            this.current = cc.audioEngine.play(this.sound, this.loop, volume);\r\n        }\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n\r\n    onDestroy() {\r\n        if (this.current != null) {\r\n            cc.audioEngine.stop(this.current);\r\n        }\r\n    }\r\n});"]}