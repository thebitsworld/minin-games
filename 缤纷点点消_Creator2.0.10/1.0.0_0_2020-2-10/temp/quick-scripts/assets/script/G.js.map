{"version":3,"sources":["G.js"],"names":["G","score","gametime","addtime","tip","str","Tip","show","initUser","uid","lv","lvs","star","volume","maxscore","loadData","user","cc","sys","localStorage","getItem","log","Date","getTime","save","JSON","parse","setItem","loadNetConfig","netConfig","HomeUI","jsonAsset","json","loader","load","url","err","res","stringify","get","type","pools","pool","NodePool","node","put","module","exports"],"mappings":"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","file":"G.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["var G = {\r\n    score: 0,\r\n    gametime: 90,\r\n    addtime: 0,\r\n    tip(str) {\r\n        G.Tip.show(str);\r\n    },\r\n\r\n\r\n    initUser: {\r\n        uid: 0,\r\n        lv: 1,\r\n        lvs: {\r\n            1: 0,\r\n        },\r\n        star: 0,\r\n        volume: 1,\r\n        maxscore: 0, //最高分\r\n    },\r\n\r\n    //加载玩家数据,如果没有则初始化\r\n    loadData() {\r\n        if (this.user) {\r\n            return;\r\n        }\r\n\r\n        let str = cc.sys.localStorage.getItem('user');\r\n\r\n        if (str == null || str == \"\") {\r\n            cc.log(\"注册\");\r\n            G.user = G.initUser;\r\n            G.user.uid = new Date().getTime();\r\n            // G.user.ballTime = new Date().getTime();\r\n            // str = JSON.stringify(G.initUser);\r\n            G.save();\r\n        } else {\r\n            cc.log(\"登录\");\r\n            G.user = JSON.parse(str);\r\n\r\n            if (!G.user.lvs) {\r\n                cc.sys.localStorage.setItem('user', \"\");\r\n                this.loadData();\r\n                return;\r\n            }\r\n        }\r\n        G.uid = G.user.uid;\r\n        G.volume = G.user.volume;\r\n\r\n        G.loadNetConfig();\r\n    },\r\n    loadNetConfig() {\r\n\r\n\r\n        // cc.loader.loadRes('config', (err, jsonAsset) => {\r\n\r\n        // G.netConfig = jsonAsset.json;\r\n\r\n        G.netConfig = G.HomeUI.jsonAsset.json;\r\n\r\n        cc.loader.load(G.netConfig.url, (err, res) => {\r\n\r\n            if (err) {\r\n                cc.log(\"加载netConfigUrl err\", err);\r\n                return;\r\n            }\r\n            cc.log(\"加载netConfigUrl res\", res);\r\n\r\n            G.netConfig = res;\r\n            \r\n           \r\n        });\r\n\r\n        // });\r\n\r\n    },\r\n    \r\n    //保存玩家数据\r\n    save() {\r\n        cc.log(\"保存数据...\");\r\n        let str = JSON.stringify(G.user);\r\n        cc.sys.localStorage.setItem('user', str);\r\n        cc.log(\"保存数据成功:\" + str);\r\n    },\r\n\r\n\r\n    get(type) {\r\n        if (!this.pools) {\r\n            this.pools = {};\r\n        }\r\n\r\n\r\n        let pool = this.pools[type];\r\n\r\n\r\n        if (!pool) {\r\n            // pool = new cc.Pool(type);\r\n            pool = new cc.NodePool(type);\r\n            // pool = [];\r\n\r\n            this.pools[type] = pool;\r\n        }\r\n\r\n        let node = pool.get();\r\n        // if (node) {\r\n        //     node.deaded = false;\r\n        // }\r\n\r\n        return node;\r\n    },\r\n    put(type, node) {\r\n        if (!this.pools) {\r\n            this.pools = {};\r\n        }\r\n        let pool = this.pools[type];\r\n        if (!pool) {\r\n            this.get(type);\r\n            pool = this.pools[type];\r\n        }\r\n        // node.deaded = true;\r\n        pool.put(node);\r\n\r\n    },\r\n\r\n};\r\nmodule.exports = G;"]}