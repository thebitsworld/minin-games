{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\script\\Common/assets\\script\\Common\\confetti.js"],"names":["cc","Class","extends","Component","properties","arr","SpriteFrame","icon","Node","num","onLoad","active","pool","NodePool","start","schedule","i","node","get","instantiate","getComponent","Sprite","spriteFrame","Math","floor","random","length","position","v2","parent","width","height","color","Color","scale","runAction","sequence","moveBy","callFunc","stopAllActions","put","repeatForever","rotateBy"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,aAAK,CAACL,GAAGM,WAAJ,CAjBG;AAkBRC,cAAMP,GAAGQ,IAlBD;AAmBRC,aAAK;AAnBG,KAHP;;AAyBL;;AAEAC,UA3BK,oBA2BI;AACL,aAAKH,IAAL,CAAUI,MAAV,GAAmB,KAAnB;AACA,aAAKC,IAAL,GAAY,IAAIZ,GAAGa,QAAP,CAAgB,EAAhB,CAAZ;AACH,KA9BI;AAgCLC,SAhCK,mBAgCG;AAAA;;AAGJ,aAAKC,QAAL,CAAc,YAAM;AAAA,uCAGPC,CAHO;AAIZ,oBAAIC,OAAO,MAAKL,IAAL,CAAUM,GAAV,EAAX;AACA,oBAAID,QAAQ,IAAZ,EAAkB;AACdA,2BAAOjB,GAAGmB,WAAH,CAAe,MAAKZ,IAApB,CAAP;AACAU,yBAAKN,MAAL,GAAc,IAAd;AACH;;AAGDM,qBAAKG,YAAL,CAAkBpB,GAAGqB,MAArB,EAA6BC,WAA7B,GAA2C,MAAKjB,GAAL,CAASkB,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,MAAKpB,GAAL,CAASqB,MAApC,CAAT,CAA3C;AACAT,qBAAKU,QAAL,GAAgB3B,GAAG4B,EAAH,CAAML,KAAKE,MAAL,KAAgB,MAAKR,IAAL,CAAUY,MAAV,CAAiBC,KAAjC,GAAyC,MAAKb,IAAL,CAAUY,MAAV,CAAiBC,KAAjB,GAAyB,CAAxE,EAA2E,MAAKb,IAAL,CAAUY,MAAV,CAAiBE,MAAjB,GAA0B,CAArG,CAAhB;AACAd,qBAAKe,KAAL,GAAa,IAAIhC,GAAGiC,KAAP,CAAaV,KAAKE,MAAL,KAAgB,GAA7B,EAAkCF,KAAKE,MAAL,KAAgB,GAAlD,EAAuDF,KAAKE,MAAL,KAAgB,GAAvE,CAAb;AACAR,qBAAKiB,KAAL,GAAaX,KAAKE,MAAL,KAAgB,CAA7B;AACAR,qBAAKkB,SAAL,CAAenC,GAAGoC,QAAH,CAAYpC,GAAGqC,MAAH,CAAU,IAAI,KAAKd,KAAKE,MAAL,EAAnB,EAAkC,CAAlC,EAAqC,CAAC,IAAtC,CAAZ,EAAyDzB,GAAGsC,QAAH,CAAY,YAAM;;AAEtFrB,yBAAKsB,cAAL;AACA;AACA,0BAAK3B,IAAL,CAAU4B,GAAV,CAAcvB,IAAd;AAEH,iBANuE,CAAzD,CAAf;AAOA;AACAA,qBAAKkB,SAAL,CAAenC,GAAGyC,aAAH,CAAiBzC,GAAG0C,QAAH,CAAY,IAAI,IAAInB,KAAKE,MAAL,EAApB,EAAmC,MAAMF,KAAKE,MAAL,EAAzC,EAAwD,MAAMF,KAAKE,MAAL,EAA9D,CAAjB,CAAf;AACA;;;AAIA;AACA;AACAR,qBAAKY,MAAL,GAAc,MAAKZ,IAAL,CAAUY,MAAxB;AA9BY;;AAGhB,iBAAK,IAAIb,IAAI,CAAb,EAAgBA,IAAI,MAAKP,GAAzB,EAA8BO,GAA9B,EAAmC;AAAA,sBAA1BA,CAA0B;AA6BlC;AAIJ,SApCD,EAoCG,GApCH;AAsCH;AAzEI;;AA2EL;AA3EJ","file":"confetti.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\script\\Common","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n\r\n        arr: [cc.SpriteFrame],\r\n        icon: cc.Node,\r\n        num: 15,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.icon.active = false;\r\n        this.pool = new cc.NodePool(\"\");\r\n    },\r\n\r\n    start() {\r\n\r\n\r\n        this.schedule(() => {\r\n\r\n\r\n            for (let i = 0; i < this.num; i++) {\r\n                let node = this.pool.get();\r\n                if (node == null) {\r\n                    node = cc.instantiate(this.icon);\r\n                    node.active = true;\r\n                }\r\n\r\n\r\n                node.getComponent(cc.Sprite).spriteFrame = this.arr[Math.floor(Math.random() * this.arr.length)];\r\n                node.position = cc.v2(Math.random() * this.node.parent.width - this.node.parent.width / 2, this.node.parent.height / 2);\r\n                node.color = new cc.Color(Math.random() * 255, Math.random() * 255, Math.random() * 255);\r\n                node.scale = Math.random() * 1;\r\n                node.runAction(cc.sequence(cc.moveBy(5 + 10 * Math.random(), 0, -2000), cc.callFunc(() => {\r\n\r\n                    node.stopAllActions();\r\n                    // node.parent = null;\r\n                    this.pool.put(node);\r\n\r\n                })));\r\n                // node.runAction(cc.repeatForever(cc.skewBy(2, 0, -90)));\r\n                node.runAction(cc.repeatForever(cc.rotateBy(2 + 2 * Math.random(), 360 * Math.random(), 360 * Math.random())));\r\n                // node.runAction(cc.spawn(cc.moveBy(10+30* Math.random(), 0, -1000), cc.skewBy(2, 0, -90)));\r\n\r\n\r\n\r\n                //, cc.repeatForever(cc.rotateBy(5, 360))\r\n                // node.runAction(cc.spawn(cc.moveBy(50 * Math.random(), 0, -1000), cc.repeatForever(cc.rotateBy(5, 360, 360))));\r\n                node.parent = this.node.parent;\r\n\r\n            }\r\n\r\n\r\n\r\n        }, 0.5);\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});"]}